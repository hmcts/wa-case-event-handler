buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("net.serenity-bdd:serenity-gradle-plugin:3.2.0")
  }
}

plugins {
  id 'application'
  id 'checkstyle'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.springframework.boot' version '2.7.11'
  id 'org.owasp.dependencycheck' version '8.2.1'
  id 'com.github.ben-manes.versions' version '0.42.0'
  id 'uk.gov.hmcts.java' version '0.12.43'
  id 'org.sonarqube' version '3.5.0.2730'
  id 'info.solidsoft.pitest' version '1.7.4'
  id 'io.freefair.lombok' version '6.5.1'
}

apply plugin: 'net.serenity-bdd.aggregator'

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

sourceSets {

  testUtils {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/testUtils/java')
    }
    resources.srcDir file('src/testUtils/resources')
  }

  functionalTest {
    java {
      compileClasspath += testUtils.output
      runtimeClasspath += testUtils.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += testUtils.output
      runtimeClasspath += testUtils.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
    showStandardStreams = true
  }
}

tasks.withType(Copy) {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}


test {
  failFast = true
}

task functional(type: Test) {
  maxParallelForks = (System.getenv('MAX_FT_TESTS_PARALLEL_FORKS') ? System.getenv('MAX_FT_TESTS_PARALLEL_FORKS') : 1) as int
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

task tests {
  description = "Runs junit , integration and functional tests"
  dependsOn test, integration, functional
}

task fortifyScan(type: JavaExec) {
  mainClass = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

checkstyle {
  maxWarnings = 0
  toolVersion = '8.29'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
  toolVersion = "6.40.0"
  sourceSets = [sourceSets.main]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.required = true
    csv.required = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

pitest {
  junit5PluginVersion = '0.15'
  targetClasses = ['uk.gov.hmcts.reform.wacaseeventhandler.*']
  excludedClasses = [
    'uk.gov.hmcts.reform.wacaseeventhandler.config.*',
    'uk.gov.hmcts.reform.wacaseeventhandler.services.calendar.PublicHolidaysCollection',
    'uk.gov.hmcts.reform.wacaseeventhandler.Application'
  ]
  threads = 10
  outputFormats = ['XML', 'HTML']
  timestampedReports = false
  mutationThreshold = 80
}

project.tasks['pitest'].group = "Verification"

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport

// Ensures that functional tests index page is generated
// Functional tests should run two tasks "functional" and "aggregate"
gradle.startParameter.continueOnFailure = true
functional.finalizedBy aggregate

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: wa-case-event-handler"
    property "sonar.projectKey", "uk.gov.hmcts.reform:wa-case-event-handler"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/wacaseeventhandler/config/**," +
      "src/testUtils/java/uk/gov/hmcts/reform/wacaseeventhandler/**," +
      "src/main/java/uk/gov/hmcts/reform/wacaseeventhandler/Application.java," +
      "src/main/java/uk/gov/hmcts/reform/wacaseeventhandler/clients/*Consumer.java," +
      "src/main/java/uk/gov/hmcts/reform/wacaseeventhandler/entity/CaseEventMessageEntity.java"
    property "sonar.cpd.exclusions", "src/main/java/uk/gov/hmcts/reform/wataskmanagementapi/services/calendar/**"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  suppressionFile = 'config/owasp/suppressions.xml'

  // CVE Scanning only relevant to production code that is published, not test or other implementations
  scanConfigurations += 'releaseCompileClasspath'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}
dependencyManagement {
  dependencies {
    dependency group: 'com.github.docker-java', name: 'docker-java', version: '3.3.0'
    dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'
    // CVE-2018-10237 - Unbounded memory allocation
    dependencySet(group: 'com.google.guava', version: '31.1-jre') {
      entry 'guava'
    }
    // CVE-2023-24998 - DoS with a malicious upload or series of uploads possible
    dependencySet(group: 'commons-fileupload', version: '1.5') {
      entry 'commons-fileupload'
    }
    dependency group: 'commons-io', name: 'commons-io', version: '2.11.0'

    //CVE-2021-27568
    dependency group: 'net.minidev', name: 'json-smart', version: '2.4.10'

    //CVE-2021-28170
    dependency group: 'org.glassfish', name: 'jakarta.el', version: '4.0.2'

    //CVE-2021-42550
    dependencySet(group: 'ch.qos.logback', version: '1.2.10') {
      entry 'logback-classic'
      entry 'logback-core'
    }
    dependencySet(group: 'io.netty', name: 'netty-all', version: '4.1.92.Final') {
      entry 'netty-buffer'
      entry 'netty-codec'
      entry 'netty-codec-dns'
      entry 'netty-codec-http'
      entry 'netty-codec-http2'
      entry 'netty-handler'
      entry 'netty-handler-proxy'
      entry 'netty-handler'
      entry 'netty-transport-native-unix-common'
      entry 'netty-transport-native-kqueue'
      entry 'netty-transport-native-epoll'
      entry 'netty-transport'
      entry 'netty-codec-socks'
      entry 'netty-common'
      entry 'netty-resolver'
      entry 'netty-resolver-dns'
      entry 'netty-resolver-dns-native-macos'
      entry 'netty-transport-classes-epoll'
      entry 'netty-transport-classes-kqueue'
      entry 'netty-resolver-dns-classes-macos'
    }

    dependencySet(group: 'org.seleniumhq.selenium', version: '4.1.4') {
      entry 'selenium-java'
      entry 'selenium-remote-driver'
      entry 'selenium-firefox-driver'
      entry 'selenium-chrome-driver'
      entry 'selenium-safari-driver'
      entry 'selenium-edge-driver'
      entry 'selenium-api'
      entry 'selenium-support'
    }

    dependencySet(group: 'org.springframework.security', version: '5.7.8') {
      entry 'spring-security-core'
      entry 'spring-security-acl'
      entry 'spring-security-aspects'
      entry 'spring-security-cas'
      entry 'spring-security-config'
      entry 'spring-security-crypto'
      entry 'spring-security-data'
      entry 'spring-security-ldap'
      entry 'spring-security-messaging'
      entry 'spring-security-oauth2-client'
      entry 'spring-security-oauth2-core'
      entry 'spring-security-oauth2-jose'
      entry 'spring-security-oauth2-resource-server'
      entry 'spring-security-openid'
      entry 'spring-security-remoting'
      entry 'spring-security-rsocket'
      entry 'spring-security-saml2-service-provider'
      entry 'spring-security-taglibs'
      entry 'spring-security-test'
      entry 'spring-security-web'
    }
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

def versions = [
  junit        : '5.9.3',
  junitPlatform: '1.9.3',
  reformLogging: '5.1.9',
  springDoc    : '1.6.6',
  springBoot   : '2.7.11',
  serenity     : '3.1.20',
  pitest       : '1.13.2',
  logbook      : '2.6.2',
  tomcat       : '9.0.75',
  log4j        : '2.17.2',
  retry        : '2.0.1'
]

ext.libraries = [
  junit5: [
    "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
    "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
    "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
    "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
  ]
]

ext['snakeyaml.version'] = '1.33'

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: versions.springBoot
  implementation group: 'org.springframework.security', name: 'spring-security-test', version: versions.springSecurity
  implementation group: 'org.springframework.security', name: 'spring-security-rsa', version: '1.0.11.RELEASE'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot
  implementation group: 'org.springframework.retry', name: 'spring-retry', version: versions.retry
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.7'

  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: versions.springDoc

  implementation group: 'org.zalando', name: 'logbook-spring-boot-starter', version: versions.logbook

  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging
  implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: versions.reformLogging

  implementation group: 'com.github.hmcts', name: 'properties-volume-spring-boot-starter', version: '0.1.1'
  implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '3.1.4'
  implementation group: 'com.github.hmcts', name: 'core-case-data-store-client', version: '4.9.2'
  implementation group: 'com.azure', name: 'azure-messaging-servicebus', version: '7.13.4'
  implementation group: 'io.projectreactor.netty', name: 'reactor-netty-http', version: '1.1.7'
  implementation group: 'io.projectreactor.netty', name: 'reactor-netty-core', version: '1.0.24'

  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: versions.tomcat
  implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: versions.tomcat
  implementation group: 'org.camunda.bpm', name: 'camunda-external-task-client', version: '7.19.0'
  implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '6.1.0'
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
  implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.1.6'

  testImplementation libraries.junit5
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation group: 'org.junit.vintage', name: 'junit-vintage-engine', version: versions.junit

  testImplementation group: 'com.obsidiandynamics.pojotester', name: 'core', version: '0.9.0'
  testImplementation group: 'com.jparams', name: 'to-string-verifier', version: '1.4.8'
  testImplementation group: 'com.google.guava', name: 'guava-testlib', version: '30.1.1-jre'
  testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.16.2'
  testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.17.6'


  testImplementation group: 'org.pitest', name: 'pitest', version: versions.pitest
  testImplementation group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.9.11'
  testImplementation group: 'org.codehaus.sonar-plugins', name: 'sonar-pitest-plugin', version: '0.5'

  testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.3.0', classifier: 'all'
  testImplementation group: 'com.github.hmcts', name: 'document-management-client', version: '7.0.1'

  testUtilsImplementation sourceSets.main.runtimeClasspath
  testUtilsImplementation sourceSets.test.runtimeClasspath

  integrationTestImplementation sourceSets.main.runtimeClasspath
  integrationTestImplementation sourceSets.test.runtimeClasspath

  functionalTestImplementation sourceSets.main.runtimeClasspath
  functionalTestImplementation sourceSets.test.runtimeClasspath

  smokeTestImplementation sourceSets.main.runtimeClasspath
  smokeTestImplementation sourceSets.test.runtimeClasspath

  implementation group: 'org.flywaydb', name: 'flyway-core', version: '8.5.13'
  implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'
  implementation group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '2.21.1'

  implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.15.0'
  runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
}

mainClassName = 'uk.gov.hmcts.reform.wacaseeventhandler.Application'

bootJar {
  getArchiveFileName().set(provider {
    'wa-case-event-handler.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
