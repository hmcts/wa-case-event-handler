server:
  port: 8088

management:
  endpoint:
    health:
      show-details: "always"
      newMessageStateThreshold: ${NEW_MESSAGE_STATE_THRESHOLD:10}
      newMessageStateCheckEnvEnabled: ${NEW_MESSAGE_STATE_HEALTH_CHECK:prod,aat}
      receivedMessageCheckEnvEnabled: ${RECEIVED_MESSAGE_HEALTH_CHECK:prod,aat}
      newMessageStateThresholdForLivenessCheck: ${NEW_MESSAGE_STATE_THRESHOLD_FOR_LIVENESS_CHECK:100}
      newMessageLivenessStateCheckEnvEnabled: ${NEW_MESSAGE_LIVENESS_STATE_HEALTH_CHECK:test,aat,local-arm-arch}
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState, caseEventHandlerLivenessHealthController
        readiness:
          include: readinessState, caseEventHandlerReadinessHealthController
      show-components: always
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

idam:
  url: ${OPEN_ID_IDAM_URL:http://sidam-api}
  s2s-auth:
    url: ${S2S_URL:http://service-auth-provider-api}
    secret: ${S2S_SECRET_CASE_EVENT_HANDLER:AAAAAAAAAAAAAAAA}
    name: ${S2S_NAME_CASE_EVENT_HANDLER:wa_case_event_handler}
  s2s-authorised:
    services: ${WA_S2S_AUTHORIZED_SERVICES:wa_case_event_handler,wa_task_monitor,wa_task_management_api,wa_message_cron_service}
  redirectUrl: ${IA_IDAM_REDIRECT_URI:http://xui-webapp/oauth2/callback}
  scope: "openid profile roles"
  api:
    baseUrl: ${IDAM_URL:http://sidam-api}
  test-account-pw: ${IDAM_TEST_ACCOUNT_PW:password}


wa-workflow-api:
  url: ${WA_WORKFLOW_API_URL:http://localhost:8099}
wa-task-management-api:
  url: ${WA_TASK_MANAGEMENT_API_URL:http://localhost:8087}
spring:
  config:
    import: "optional:configtree:/mnt/secrets/wa/"
  application:
    name: WA Case Event Handler
  jackson.serialization.indent_output: true
  main:
    allow-bean-definition-overriding: true
  flyway:
    out-of-order: true
    ignore-missing-migrations: true
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_NAME:wa_case_event_messages_db}${POSTGRES_CONNECTION_OPTIONS:?stringtype=unspecified}
    username: ${POSTGRES_USERNAME:ccd}
    password: ${POSTGRES_PASSWORD:ccd}
    type: com.zaxxer.hikari.HikariDataSource
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${OPEN_ID_IDAM_URL:http://sidam-api}/o/jwks
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_IDAM_URL:http://sidam-api}/o
        registration:
          oidc:
            client-id: ${WA_IDAM_CLIENT_ID:wa}
            client-secret: ${WA_IDAM_CLIENT_SECRET:something}

springdoc:
  packagesToScan: uk.gov.hmcts.reform.wacaseeventhandler.controllers
  writer-with-order-by-keys: true

security:
  anonymousPaths:
    - "/"
    - "/health"
    - "/health/liveness"
    - "/health/readiness"
    - "/loggers/**"
    - "/swagger-resources/**"
    - "/swagger-ui/**"
    - "/swagger-ui/index.html"
    - "/v3/**"
    - "/webjars/**"
    - "/favicon.ico"

govUkHolidays:
  url: https://www.gov.uk/

azure:
  servicebus:
    connection-string: ${AZURE_SERVICE_BUS_CONNECTION_STRING}
    topic-name: ${AZURE_SERVICE_BUS_TOPIC_NAME:ccd-case-events-aat}
    ccd-case-events-subscription-name: ${AZURE_SERVICE_BUS_CCD_CASE_EVENTS_SUBSCRIPTION_NAME:wa-ccd-case-events-sub-aat}
    retry-duration: ${AZURE_SERVICE_BUS_RETRY_DURATION:60}
    threads: ${AZURE_SERVICE_BUS_CONCURRENT_SESSIONS:1}
    enableASB-DLQ: ${AZURE_SERVICE_BUS_DLQ_FEATURE_TOGGLE:false}
    retry-attempts: ${AZURE_SERVICE_BUS_RETRY_ATTEMPTS:3}

environment: ${ENVIRONMENT:local}

logging:
  level:
    root: INFO
    com.microsoft.azure.servicebus: OFF
    com.azure.messaging.servicebus: OFF
    com.azure.core.amqp: OFF
    org.zalando.logbook: TRACE

launchDarkly:
  sdkKey: ${LAUNCH_DARKLY_SDK_KEY:sdk-key}
  connectionTimeout: 5000
  socketTimeout: 5000

feign:
  client:
    config:
      default:
        loggerLevel: basic

logbook:
  include: /workflow/**

role-assignment-service:
  url: ${ROLE_ASSIGNMENT_URL:http://role-assignment}

core_case_data:
  api:
    search.url: ${CCD_SEARCH_URL:http://wiremock}
    url: ${CCD_URL:http://ccd-data-store-api}

scheduledExecutors:
  messageProcessing:
    pollIntervalMilliSeconds: ${MESSAGE_PROCESSING_POLL_INTERVAL_MILLISECONDS:5000}
    threadPoolSize: ${MESSAGE_PROCESSING_THREAD_POOL_SIZE:1}
  messageReadiness:
    pollIntervalMilliSeconds: ${MESSAGE_READINESS_POLL_INTERVAL_MILLISECONDS:5000}
    threadPoolSize: ${MESSAGE_READINESS_THREAD_POOL_SIZE:1}

job:
  problem-message:
    #number of minutes
    message-time-limit: ${PROBLEM_MESSAGE_TIME_LIMIT:60}
    message-id-list: ${PROBLEM_MESSAGE_RESET_ID_LIST:}
    null-event-timestamp-message-id-list: ${PROBLEM_MESSAGE_RESET_NULL_EVENT_TIMESTAMP_ID_LIST:}
    set-processed-state-message-id-list: ${PROBLEM_MESSAGE_SET_STATE_TO_PROCESSED_ID_LIST:}
  clean-up:
    delete-limit: ${CLEAN_UP_MESSAGE_LIMIT:100}
    started-days-before: ${CLEAN_UP_STARTED_DAYS_BEFORE:90}
    state-for-prod: ${CLEAN_UP_STATE_FOR_PROD:PROCESSED}
    state-for-non-prod: ${CLEAN_UP_STATE_FOR_NON_PROD:PROCESSED}


retry:
  maxAttempts: ${RESILIENCE_RETRY_MAX_ATTEMPTS:3}
  backOff:
    delay: ${RESILIENCE_RETRY_BACK_OFF_DELAY:5000}
    maxDelay: ${RESILIENCE_RETRY_BACK_OFF_MAX_DELAY:10000}
    random: ${RESILIENCE_RETRY_BACK_OFF_RANDOM:true}

caffeine:
  timeout:
    duration: 30
    unit: MINUTES
  calendar:
    timeout:
      duration: ${CALENDAR_CACHE_TIMEOUT_DURATION:24}
      unit: ${CALENDAR_CACHE_TIMEOUT_TIMEUNIT:HOURS}
  liveness:
    database:
      check:
        duration: ${LIVENESS_DATABASE_CHECK_CACHE_DURATION:30}
        unit: ${LIVENESS_DATABASE_CHECK_CACHE_TIMEUNIT:MINUTES}

